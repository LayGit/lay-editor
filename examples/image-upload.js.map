{"version":3,"sources":["webpack:///./examples/image-upload.js"],"names":["Test","state","value","undefined","onChange","setState","render","toolbar","image","upto","accept","maxSize","server","url","headers","file","data","withCredentials","resultFn","response","code","padding","Component","ReactDOM","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;IAEMA,I;;;;;;;;;;;;yMACJC,K,GAAQ;AACNC,aAAOC;AADD,K,QAIRC,Q,GAAW,UAACF,KAAD,EAAW;AACpB,YAAKG,QAAL,CAAc,EAAEH,YAAF,EAAd;AACD,K;;;iBAEDI,M,qBAAU;AACR,QAAMC,UAAU;AACdC,aAAO;AACL;AACAC,cAAM,QAFD;AAGL;AACAC,gBAAQ,0CAJH;AAKL;AACAC,iBAAS,OAAO,IAAP,IAAe,IAAf,IAAuB,OAN3B;AAOL;AACAC,gBAAQ;AACN;AACAC,eAAK,SAFC;AAGN;AACAC,mBAAS,EAJH;AAKN;AACAC,gBAAM,MANA;AAON;AACAC,gBAAM,EARA;AASN;AACAC,2BAAiB,KAVX;AAWN;AACAC,oBAAU,kBAACC,QAAD,EAAc;AACtB;AACA,gBAAIA,SAASC,IAAT,IAAiB,CAArB,EAAwB;AACtB,qBAAOD,SAASH,IAAT,CAAcH,GAArB;AACD,aAFD,MAEO;AACL,oBAAM,eAAN;AACD;AACF;AAnBK;AARH;AADO,KAAhB;AAgCA,WACE;AAAA;AAAA,QAAK,OAAO,EAAEQ,SAAS,EAAX,EAAZ;AACE,kEAAC,6DAAD;AACE,iBAASd,OADX;AAEE,eAAO,KAAKN,KAAL,CAAWC,KAFpB;AAGE,kBAAU,KAAKE,QAHjB;AAIE,qBAAY,mCAJd;AADF,KADF;AASD,G;;;EAnDgBkB,gD;;AAsDnBC,iDAAQA,CAACjB,MAAT,CAAgB,4DAAC,IAAD,OAAhB,EAA0BkB,SAASC,cAAT,CAAwB,iBAAxB,CAA1B,E","file":"examples/image-upload.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { LayEditor, valueToHtml } from '../src/index'\n\nclass Test extends Component {\n  state = {\n    value: undefined\n  }\n\n  onChange = (value) => {\n    this.setState({ value })\n  }\n\n  render () {\n    const toolbar = {\n      image: {\n        // default is base64\n        upto: 'server',\n        // input accept attribute\n        accept: 'image/gif,image/jpeg,image/jpg,image/png',\n        // max file size, numeric bytes, m(MB), k(KB)\n        maxSize: 2048 * 1024 || '2m' || '2048k',\n        // upload config\n        server: {\n          // form action url\n          url: 'http://',\n          // request headers, available in modern browsers\n          headers: {},\n          // file param post to server\n          file: 'file',\n          // other data object to post or a function which returns a data object\n          data: {},\n          // ajax upload with cookie send\n          withCredentials: false,\n          // call after post success, return image url or throw exception to trigger error\n          resultFn: (response) => {\n            // custom response flag\n            if (response.code == 0) {\n              return response.data.url\n            } else {\n              throw 'upload failed'\n            }\n          },\n        },\n      },\n    }\n    return (\n      <div style={{ padding: 20 }}>\n        <LayEditor\n          toolbar={toolbar}\n          value={this.state.value}\n          onChange={this.onChange}\n          placeholder=\"写点什么吧...\" />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Test />, document.getElementById('__react-content'))\n\n\n\n// WEBPACK FOOTER //\n// ./examples/image-upload.js"],"sourceRoot":""}